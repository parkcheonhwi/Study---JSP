GET 방식과 POST 방식
- GET
	주소에 데이터를 추가하여 전달하는 방식.
	보통 쿼리 문자열(query string)에 포함되어 전송되므로, 길이에 제한이 있으며
	주소에 데이터가 보이므로 보안상 취약점이 존재한다.
	중요한 데이터 혹은 길이가 긴 데이터는 POST 방식을 사용하여 요청하는 것이 좋지만
	GET 방식이 POST 방식보다 상대적으로 빠른 전송방식이다.

- POST
	데이터를 별도로 첨부(Header에 첨부)하여 전달하는 방식.
	브라우저 히스토리에도 남지 않고 데이터는 쿼리 문자열과는 별도로 전송된다.
	따라서 데이터의 길이에 제한도 없으며, GET 방식 보다 보안성이 높다.
	하지만 GET 방식 보다 상대적으로 느리다.
========================================================================================
DBCP(DataBase Connection Pool)
	사용자 요청이 있을 때 마다 DB연결을 한다면 코드가 복잡해지며,
	많은 요청이 있을 때 연결 속도가 저하될 수 있다.
	따라서 미리 Connection을 만들어 두고, 필요 시 저장된 공간에서
	가져다 쓴 후 반환하는 기법이다.

JNDI(Java Naming and Directory Interface)
	디렉터리 서비스에서 제공하는 데이터 및 객체를 발견하고 참고하기 위한 자바 API이며,
	외부에 있는 객체를 가져오기 위한 기술이다.
	
MyBatis Framework
	소스코드 안에 SQL문을 작성하면 코드가 길어지고 섞여 있어서 유지보수 및 분업이 쉽지 않다.
	MyBatis는 기존 JDBC 방식과는 달리 SQL문을 XML파일에 작성함으로써 코드가 줄어들고,
	SQL문 수정이 편해진다. 또한 DBCP를 사용하여 커넥션을 여러 개 생성하기 때문에 JDBC만
	사용하는 것보다는 작업 효율과 가독성이 좋아진다.

























